import { serialize } from 'next-mdx-remote/serialize';
import { MDXRemote } from 'next-mdx-remote';
import { InferGetStaticPropsType } from 'next';
import { promises as fs } from 'fs';
import path from 'path';
import matter from 'gray-matter';
import Head from 'next/head';
import remarkMath from 'remark-math';
import rehypeKatex from 'rehype-katex';

export default function TestPage({ source, data, path }: InferGetStaticPropsType<typeof getStaticProps>) {
  const components = {
    img: ({ src }) => <img src={path + src} />,
  };

  return (
    <div>
      <Head>
        <title>KaTeX test</title>
        <meta name="description" content="Generated by create next app" />
        <link
          rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/katex@0.13.11/dist/katex.min.css"
          integrity="sha384-Um5gpz1odJg5Z4HAmzPtgZKdTBHZdw8S29IecapCSB31ligYPhHQZMIlWLYQGVoc"
          crossOrigin="anonymous"
        />
      </Head>
      <pre>{JSON.stringify(data, null, 2)}</pre>
      <div className="wrapper prose prose-lg m-auto">
        <MDXRemote {...source} components={components} />
      </div>
    </div>
  );
}

export async function getStaticPaths() {}

export async function getStaticProps() {
  const md = await fs.readFile(path.join('public/content/blog/it/2016-12-22-inauguriamo-il-blog/index.md'));
  const { content, data } = matter(md);
  const mdxSource = await serialize(content, {
    mdxOptions: {
      remarkPlugins: [remarkMath],
      rehypePlugins: [rehypeKatex],
      filepath: 'content/blog/it/2016-12-22-inauguriamo-il-blog/index.md',
    },
  });

  return {
    props: { source: mdxSource, data, path: path.join('content/blog/it/2016-12-22-inauguriamo-il-blog/') },
  };
}
